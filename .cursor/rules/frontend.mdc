---
description: Useful frontend rules
globs: 
---
# Burpy App Guidelines

## Project Overview
- Build a web app named Burpy to for viewing saved Burp Suite saved items in .xml and viewing HAR json formatted files.

## Frontend Guidelines
- Fully implement all requested functionality with complete, working code (no placeholders or TODOs).
- Write inline comments in all lower case (e.g., “init” instead of “initialize”).
- Adhere to best practices and DRY principles to ensure bug-free, production-ready code.

## UI/UX and Design
- Prioritize a clean, sleek, minimalistic, and modern design for optimal user experience.
- Use a clean layout with minimal distractions by focusing on essential elements and ample white space.
- Employ a limited color palette to reduce visual clutter.

## Project Structure
- `@/components/` for standard components.
- `@/components/ui/` for shadcn-ui components (new UI components must use lowercase kebab-case).
- `@/lib/` for utility functions.
- `@/styles/` for styles.
- `@/types/` for type definitions.
- `@/hooks/` for hooks.
- `@/pages/` for page components.
- `@/public/` for static files.

## Code Implementation
- Use early returns for better readability.
- Use Tailwind CSS classes exclusively for styling; avoid using traditional CSS.
- Utilize “class:” instead of the ternary operator for class tags when applicable.
- Choose descriptive variable and function names; event handlers should use a “handle” prefix (e.g., handleClick, handleKeyDown).
- Incorporate accessibility features on interactive elements (e.g., tabindex, aria-label, on:click, on:keydown).
- Define functions as const declarations (e.g., const toggle = () =>) and include type definitions where possible.
